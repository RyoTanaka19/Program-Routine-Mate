<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>学習セッションカレンダー</title>

  <!-- FullCalendar CSS -->
  <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet">
  <!-- Tailwind CSS -->
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

  <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/locales-all.min.js"></script>
</head>

<body class="bg-gray-100 font-sans min-h-screen">

  <!-- ヘッダー -->
  <header class="bg-green-600 p-4">
    <h1 class="text-3xl font-bold text-white text-center">学習セッションカレンダー</h1>
  </header>

  <!-- カレンダーコンテナ -->
  <div class="max-w-7xl mx-auto px-4 py-6">
    <div id="calendar" class="bg-white rounded-lg shadow-md p-4 min-h-[750px]"></div>
  </div>

  <!-- FullCalendar JS -->
  

  <!-- カレンダーの初期化 -->
  <script>
    let calendarInstance = null;

    function initializeCalendar() {
      const calendarEl = document.getElementById('calendar');
      if (!calendarEl) return;

      if (calendarInstance !== null) {
        calendarInstance.destroy();
        calendarInstance = null;
      }

      calendarInstance = new FullCalendar.Calendar(calendarEl, {
        locale: 'ja',
        initialView: 'dayGridMonth',
        initialDate: '2025-02-01',
        height: 750,  // 高さを固定して見やすく
        events: [
          <% @study_reminders.each do |reminder| %>
            {
              start: '<%= reminder.start_time.strftime("%Y-%m-%dT%H:%M:%S") %>',
              end: '<%= reminder.end_time.present? ? reminder.end_time.strftime("%Y-%m-%dT%H:%M:%S") : "" %>',  <!-- end_time が nil の場合空文字を返す -->
              description: '学習セッション',
              color: '#4CAF50'
            },
          <% end %>
        ],
        dateClick: function(info) {
          const selectedDate = info.dateStr;
          const now = new Date();
          const hour = now.getHours();
          const minute = now.getMinutes();
          window.location.href = "<%= new_study_reminder_path %>?date=" + selectedDate +
                                 "&hour=" + hour + "&minute=" + minute;
        }
      });

      calendarInstance.render();
    }

    // Turbo対応含む初期化
    const setupCalendar = () => {
      requestAnimationFrame(() => {
        initializeCalendar();
      });
    };

    document.addEventListener('DOMContentLoaded', setupCalendar);
    document.addEventListener('turbo:load', setupCalendar);
    document.addEventListener('turbo:frame-load', setupCalendar);
  </script>

</body>
</html>
