<% content_for(:title, t('.title')) %>

<%= render 'search_form', q: @q, url: study_logs_path %>

<br>

<div class="w-full flex lg:items-center flex-col">
  <!-- ヒートマップの表示領域 -->
  <div id="cal-heatmap" class="overflow-auto md:overflow-scroll"></div>
</div>

<script>
  // ヒートマップを初期化する関数を即時に実行
  set_heatmap(); 

  function set_heatmap() {
    // ヒートマップ開始日を2ヶ月前に設定
    let startDate = new Date();
    startDate.setMonth(startDate.getMonth() - 2); // 2ヶ月前から表示を開始
    console.log(startDate); // デバッグ用：開始日をコンソールに表示

    // サーバーサイドから渡されたstudy_logsのデータを受け取る（Railsで変数がJSONとして埋め込まれている）
    let data = <%= @study_logs_for_js.to_json.html_safe %>;

    // サーバーから取得したデータの形式を整える
    data = data.map(item => ({
      // 各ログの「date」をISO形式の日付文字列に変換
      date: new Date(item.date).toISOString(),
      // 各ログの「total」をそのまま保持
      total: item.total
    }));

    // CalHeatmapのインスタンスを作成
    const cal = new CalHeatmap();

    // CalHeatmapの設定と描画
    cal.paint({
      // ヒートマップを描画する対象のDOM要素（idが"cal-heatmap"の要素）を指定
      itemSelector: '#cal-heatmap',
      
      // ドメイン（年・月など）の設定
      domain: {
        type: 'month', // ドメインタイプを月に設定
        gutter: 4, // 月と月の間の隙間
        label: { 
          text: 'MMM', // 月のラベル形式（例: Jan, Feb, Mar...）
          textAlign: 'start', // ラベルの位置を左寄せ
          position: 'top', // ラベルを上部に表示
        },
      },
      
      // サブドメイン（1日のグリッド）設定
      subDomain: {
        type: 'ghDay', // ghDay（GitHubスタイルの日）の形式
        radius: 2, // グリッドの半径
        width: 11, // 1日のグリッドの幅
        height: 11, // 1日のグリッドの高さ
        gutter: 4, // グリッドの間隔
      },

      // ヒートマップの開始日を設定
      date: { start: startDate },

      // 表示する月数（範囲）を設定
      range: 12, // 12ヶ月分を表示

      // ヒートマップに使用するデータの設定
      data: { 
        source: data, // データのソース
        x: 'date', // x軸には「date」フィールドを使用
        y: 'total' // y軸には「total」フィールドを使用
      },
      type: 'json', // データタイプをJSONとして設定

      // 色のスケール設定（値に基づいて色が変わる）
      scale: {
        color: {
          type: 'linear', // 色の変化を線形に設定
          range: ['#ff4d4d', '#a8e6a2', '#6abf4f', '#337d2b', '#175e17'], // 色の範囲
          domain: [0, 0.1, 1, 2, 3], // 0（赤色）から3（緑色）までの値に対応
        },
      },
    });
  }
</script>

<br>


<!-- 投稿一覧セクション -->
<div class="flex flex-wrap gap-4 justify-center">
  <% @study_logs.each do |study_log| %>
    <div class="w-80 mb-4 flex flex-col border p-4 rounded-lg shadow-md bg-white hover:bg-gray-100">
      <%= link_to study_log_path(study_log), class: "block flex flex-col h-full" do %>

        <!-- 投稿日時と学習時間 -->
        <div class="text-sm text-gray-600 mb-2">
          <p><strong>投稿日:</strong> <%= study_log.date %></p>
        </div>

        <!-- ジャンル -->
        <p class="text-sm text-gray-600"><strong>ジャンル:</strong> <%= study_log.study_genre.present? ? study_log.study_genre.name : "未設定" %></p>

        <!-- 学習内容 -->
        <p class="text-sm mb-2">学習内容: <%= study_log.content %></p>

        <!-- 投稿画像 -->
        <%= image_tag(study_log.image? ? study_log.image_url : "default_study_logs_image.png", class: "w-full h-auto rounded-md mb-2") %>

        <!-- いいね -->
        <div class="flex items-center gap-1 text-gray-700 text-lg mt-2">
          <span class="text-xl">👍</span>
          <span><%= study_log.likes.count %></span>
        </div>

        <!-- ログイン状態 -->
        <div class="text-xs mt-2">
          <% if user_signed_in? && current_user == study_log.user %>
            <span style="color: green;">✅ ログイン中</span>
          <% else %>
            <span style="color: red;">❌ 未ログイン</span>
          <% end %>
        </div>
      <% end %>
    </div>
  <% end %>
</div>

<%= paginate @study_logs %>