<div class="max-w-5xl mx-auto p-6 space-y-10">
  <!-- ジャンル名の表示 -->
  <div class="border-b pb-4">
    <h1 class="text-4xl font-bold text-green-500 text-center">
      <%= @study_genre.display_name %>
    </h1>
  </div>

  <!-- Wikipedia概要の表示 -->
  <div class="bg-white shadow-md rounded-2xl p-6">
    <h2 class="text-2xl font-semibold text-green-600 flex items-center justify-center mb-4">
      <svg class="w-6 h-6 mr-2 text-green-600" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M12 6a9 9 0 11-6.363 15.363A9 9 0 0112 6z" />
      </svg>
      <%= t('study_genres.labels.wikipedia_summary') %>
    </h2>
    <p class="text-blue-500 text-center leading-relaxed whitespace-pre-line">
      <%= @wikipedia_summary %>
    </p>
  </div>

  <% if @study_genre.study_logs.pluck(:created_at).map(&:to_date).uniq.count >= 21 %>
    <!-- ✅ LGTM画像：投稿があるときのみ中央に表示 -->
    <div id="lgtm-container" class="flex justify-center mb-6 transition-opacity duration-1000">
      <%= image_tag 'lgtm.png', alt: t('study_genres.labels.lgtm_alt'), class: 'w-64 h-auto rounded-xl shadow-md' %>
    </div>

    <script>
      function fadeOutLgtm() {
        const lgtm = document.getElementById("lgtm-container");
        if (lgtm) {
          setTimeout(() => {
            lgtm.classList.add("opacity-0");
            setTimeout(() => lgtm.remove(), 1000);
          }, 5000);
        }
      }

      ['DOMContentLoaded', 'turbo:load', 'turbo:frame-load'].forEach(event => {
        document.addEventListener(event, fadeOutLgtm);
      });
    </script>
  <% end %>

  <!-- 投稿情報の表示 -->
  <div class="bg-gray-50 shadow-inner rounded-2xl p-6">
    <h2 class="text-xl font-semibold text-blue-700 mb-4 flex items-center">
      <svg class="w-5 h-5 mr-2 text-blue-500" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" d="M17 20h5v-2a4 4 0 00-3-3.87M9 20H4v-2a4 4 0 013-3.87M12 14v-4m0 0V6m0 4H8m4 0h4" />
      </svg>
      <%= t('study_genres.labels.post_info') %>
    </h2>

    <% if @study_genre.study_logs.any? %>
      <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 text-blue-600 mb-6">
        <div class="flex items-center">
          <span class="mr-2 font-medium"><%= t('study_genres.labels.post_count_label') %></span>
          <span><%= @study_genre.study_logs.count %> <%= t('study_genres.labels.posts') %></span>
        </div>
      </div>

      <!-- グラフの表示 -->
      <div class="h-64 sm:h-80 md:h-96 lg:h-[400px]" id="chart-container">
        <canvas id="chart" class="w-full h-full"></canvas>
      </div>
    <% else %>
      <div class="flex items-center justify-center h-64 text-blue-500">
        <p><%= t('study_genres.labels.no_study_logs') %></p>
      </div>
    <% end %>
  </div>

  <!-- jQueryとChart.jsのライブラリを読み込み -->
  <script>
    let chartInstance = null;

    function initializeChart() {
      $.ajax({
        url: "<%= study_genre_path(@study_genre) %>",
        dataType: 'json',
        success: function(data) {
          const labels = Object.keys(data);
          const counts = Object.values(data);
          renderChart(labels, counts);
        },
        error: function(xhr, status, error) {
          console.error("<%= j t('study_genres.js.ajax_error_console') %>", status, error);
          alert("<%= j t('study_genres.js.ajax_error_alert') %>");
        }
      });
    }

    function renderChart(labels, counts) {
      const ctx = document.getElementById('chart').getContext('2d');
      if (chartInstance) {
        chartInstance.destroy();
      }
      chartInstance = new Chart(ctx, {
        type: 'line',
        data: {
          labels: labels,
          datasets: [{
            label: '<%= j t("study_genres.labels.chart_label") %>',
            data: counts,
            borderColor: '#4CAF50',
            backgroundColor: 'rgba(76, 175, 80, 0.2)',
            fill: true,
            tension: 0.3,
            pointRadius: 5,
            pointHoverRadius: 7,
            borderWidth: 3
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            x: {
              ticks: { autoSkip: true, maxRotation: 0, minRotation: 0 },
              title: { display: true, text: '<%= j t("study_genres.labels.x_axis") %>', color: '#666' },
              grid: { offset: true, display: false }
            },
            y: {
              beginAtZero: true,
              ticks: { stepSize: 1 },
              title: { display: true, text: '<%= j t("study_genres.labels.y_axis") %>', color: '#666' }
            }
          },
          plugins: {
            legend: { display: false },
            tooltip: {
              callbacks: {
                label: function(context) {
                  return `${context.parsed.y} <%= j t("study_genres.labels.posts") %>`;
                }
              }
            }
          }
        }
      });
    }

    ['DOMContentLoaded', 'turbo:load', 'turbo:frame-load'].forEach(event => {
      document.addEventListener(event, initializeChart);
    });

    document.addEventListener('turbo:before-cache', function() {
      if (chartInstance) {
        chartInstance.destroy();
      }
    });
  </script>
</div>
