<%= javascript_include_tag "https://cdn.jsdelivr.net/npm/chart.js" %>
<%= javascript_include_tag "https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels" %>


<h1 class="text-3xl font-semibold text-center text-gray-800 mb-6">
  学習ジャンルごとのユーザー数（人気ランキング）
</h1>

<div class="max-w-4xl mx-auto p-4 bg-white shadow-lg rounded-lg">
  <canvas id="genreChart" width="400" height="200"></canvas>
</div>

<script>
  document.addEventListener('turbo:load', () => {
    const genreStats = <%= raw @genre_stats.to_json %>;

    if (!genreStats || genreStats.length === 0) {
      console.error("No genre stats data available");
      return;
    }

    const ctx = document.getElementById('genreChart');

    // Chart.js が対象の canvas を取得できないときの保険
    if (!ctx) {
      console.error("Canvas element not found.");
      return;
    }

    const labels = genreStats.map(stat => stat.name);
    const userCounts = genreStats.map(stat => stat.user_count);

    // 既存のチャートインスタンスを削除
    if (window.genreChartInstance) {
      window.genreChartInstance.destroy();
    }

    const chart = new Chart(ctx.getContext('2d'), {
      type: 'bar',
      data: {
        labels: labels,
        datasets: [{
          label: '投稿したユーザー数',
          data: userCounts,
          backgroundColor: 'rgba(54, 162, 235, 0.5)',
          borderColor: 'rgba(54, 162, 235, 1)',
          borderWidth: 1
        }]
      },
      options: {
        plugins: {
          title: {
            display: true,
            text: 'ジャンル別 投稿ユーザー数',
            font: {
              size: 18
            }
          },
          datalabels: {
            anchor: 'end',
            align: 'right',
            formatter: (value) => `${value}人`,
            font: {
              weight: 'bold'
            }
          }
        },
        responsive: true,
        indexAxis: 'y',
        scales: {
          x: {
            beginAtZero: true,
            title: {
              display: true,
              text: 'ユーザー数'
            }
          },
          y: {
            title: {
              display: true,
              text: '学習ジャンル'
            }
          }
        }
      },
      plugins: [ChartDataLabels]
    });

    // グローバルにインスタンス保持（次回 destroy 用）
    window.genreChartInstance = chart;
  });
</script>