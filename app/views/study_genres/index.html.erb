<h1 class="text-3xl font-semibold text-center text-green-500 mb-8">
  <%= t('study_genres.user_count.title') %>
</h1>

<div class="max-w-full md:max-w-4xl mx-auto p-4 sm:p-6 bg-white shadow-lg rounded-lg border border-gray-200 overflow-x-auto">
  <% if @genre_stats.present? %>
    <div class="mb-6">
      <!-- canvasの高さをデバイス幅に応じて調整 -->
      <div class="relative w-full chart-container">
        <canvas id="genreChart" class="w-full h-96 sm:h-80 md:h-96"></canvas>
      </div>
    </div>

    <script>
      const GENRES = <%= raw StudyGenre::GENRES.invert.to_json %>;

      function createChart() {
        const genreStats = <%= raw @genre_stats.to_json %>;

        if (!genreStats || genreStats.length === 0) return;

        const ctx = document.getElementById('genreChart');
        if (!ctx) return;

        const labels = genreStats.map(stat => GENRES[stat.name] || stat.name);
        const userCounts = genreStats.map(stat => stat.user_count);

        if (window.genreChartInstance) {
          window.genreChartInstance.destroy();
        }

        window.genreChartInstance = new Chart(ctx.getContext('2d'), {
          type: 'bar',
          data: {
            labels: labels,
            datasets: [{
              label: '<%= j t("study_genres.user_count.chart_label") %>',
              data: userCounts,
              backgroundColor: 'rgba(34, 197, 94, 0.8)',
              borderColor: 'rgba(34, 197, 94, 1)',
              borderWidth: 2,
              barThickness: window.innerWidth < 640 ? 30 : 50
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              title: {
                display: true,
                text: '<%= j t("study_genres.user_count.chart_title") %>',
                font: {
                  size: window.innerWidth < 640 ? 18 : 24,
                  weight: 'bold'
                },
                padding: { top: 20, bottom: 20 },
                color: '#4ade80'
              },
              datalabels: {
                anchor: 'end',
                align: 'start',
                formatter: value => `${value}人`,
                font: {
                  weight: 'bold',
                  size: window.innerWidth < 640 ? 12 : 16
                },
                color: '#000',
                offset: 8
              }
            },
            indexAxis: 'y',
            scales: {
              x: {
                beginAtZero: true,
                title: {
                  display: true,
                  text: '<%= j t("study_genres.user_count.x_axis") %>',
                  font: {
                    size: window.innerWidth < 640 ? 12 : 16,
                    weight: 'bold'
                  },
                  color: '#666'
                },
                ticks: {
                  stepSize: 5,
                  min: 0,
                  font: {
                    size: window.innerWidth < 640 ? 10 : 14,
                    weight: 'bold'
                  }
                }
              },
              y: {
                title: {
                  display: true,
                  text: '<%= j t("study_genres.user_count.y_axis") %>',
                  font: {
                    size: window.innerWidth < 640 ? 12 : 16,
                    weight: 'bold'
                  },
                  color: '#666'
                },
                ticks: {
                  font: {
                    size: window.innerWidth < 640 ? 10 : 14
                  }
                }
              }
            }
          },
          plugins: [ChartDataLabels]
        });
      }

      function initializeChart() {
        try {
          createChart();
        } catch (error) {
          console.error('<%= j t("study_genres.user_count.error_chart_render") %>', error);
        }
      }

      document.addEventListener('DOMContentLoaded', () => {
        requestAnimationFrame(initializeChart);
      });
      document.addEventListener('turbo:load', () => {
        requestAnimationFrame(initializeChart);
      });
      document.addEventListener('turbo:frame-load', () => {
        requestAnimationFrame(initializeChart);
      });

      window.addEventListener('resize', () => {
        if (window.genreChartInstance) {
          window.genreChartInstance.resize();
        }
      });
    </script>
  <% else %>
    <p class="text-center text-blue-600 text-lg"><%= t('study_genres.user_count.no_data') %></p>
  <% end %>
</div>
